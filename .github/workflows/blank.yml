# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          - name: Veracode Static Analysis Pipeline Scan and SARIF import
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-pipeline-scan-results-to-sarif@c4e3ac33a116df4b7074d53747d8814e8fdf974b
  uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
  with:
    # location of the pipeline json result file
    pipeline-results-json: # default is results.json
    # the path to the SARIF file as an output of the transformation
    output-results-sarif: # default is veracode-results.sarif
    # a path prefix conversion before publish in the SARIF file
    source-base-path-1: # optional, default is 
    # a path prefix conversion before publish in the SARIF file
    source-base-path-2: # optional, default is 
    # a path prefix conversion before publish in the SARIF file
    source-base-path-3: # optional, default is 
    # The conversion rule of Veracode findings to GitHub level
    finding-rule-level: # default is 4:3:0
    - name: Trigger Buildkite Pipeline
  # You may pin to the exact commit or the version.
  # uses: buildkite/trigger-pipeline-action@d03b6f2760252274dc019e1298095c3b61baeaf8
  uses: buildkite/trigger-pipeline-action@v1.2.0
  - name: ansible-lint
  # You may pin to the exact commit or the version.
  # uses: ansible/ansible-lint-action@38e9ebdc9c3c71e66e2a3e0a09f0b6c8bc005e46
  uses: ansible/ansible-lint-action@v4.1.0.post0
  - name: Code Inspector GitHub action
  # You may pin to the exact commit or the version.
  # uses: codeinspectorio/github-action@01c818be303e2c4bcec991ca1c51feab753a1e2a
  uses: codeinspectorio/github-action@v1
  with:
    # Token to checkout the repository.
    repo_token: 
    # Access key on Code Inspector
    code_inspector_access_key: 
    # Secret key on Code Inspector
    code_inspector_secret_key: 
    # Minimum grade. Valid options are EXCELLENT, GOOD, NEUTRAL, WARNING, CRITICAL. Leave blank to ignore.
    min_quality_grade: # default is 
    # Minimum quality score from 0 (worst) to 100 (best)
    min_quality_score: # default is 0
    # Maximum defect rate per line of code (e.g. 0.01 for 1 defect per 100 lines of code). Leave 0 to ignore.
    max_defects_rate: # default is 0
    # Maximum number of complex functions rate (e.g. number of complex functions / number of functions). Leave 0 to ignore.
    max_complex_functions_rate: # default is 0
    # Maximum number of long functions rate (e.g. number of long functions / number of functions). Leave 0 to ignore.
    max_long_functions_rate: # default is 0
    # Project on code inspector. Will use the preferences of this analysis. Leave blank and no preferences are used
    project_name: # default is 
    # Timeout before giving up (in case analysis takes too long). Default is 10 minutes
    max_timeout_sec: # default is 600
    - name: Deploy to Cloudflare Workers with Wrangler
  # You may pin to the exact commit or the version.
  # uses: cloudflare/wrangler-action@21f14faa062c33c938e3f37c30d52021bed521cb
  uses: cloudflare/wrangler-action@1.2.0
  with:
    # (Legacy) Your Cloudflare API Key
    apiKey: # optional
    # Your Cloudflare API Token
    apiToken: # optional
    # (Legacy) Your Cloudflare Email
    email: # optional
    # The environment you'd like to publish your Workers project to - must be defined in wrangler.toml
    environment: # optional
    # The relative path which Wrangler commands should be run from
    workingDirectory: # optional
    # The version of Wrangler you'd like to use to publish your Workers project
    wranglerVersion: # optional
    # A new line deliminated string of environment variable names that should be configured as Worker secrets
    secrets: # optional
    - name: Bridgecrew Github Action
  # You may pin to the exact commit or the version.
  # uses: bridgecrewio/bridgecrew-action@e388196ade022d4c6f28c368c4428b05e4f5d33a
  uses: bridgecrewio/bridgecrew-action@v1.177.2
  with:
    # directory with infrastructure code to scan
    directory: # optional, default is .
    # Run scan only on a specific check identifier (comma separated)
    check: # optional
    # Run scan on all checks but a specific check identifier (comma separated)
    skip_check: # optional
    # display only failed checks
    quiet: # optional
    # Environment variable name of the Bridgecrew API key from Bridgecrew app
    api-key: # optional
    # Runs checks but suppresses error code
    soft-fail: # optional
    # Directory for custom checks to be loaded
    external-checks-dir: # optional
    # Output Format (cli, cli+sarif, json, junitxml)
    output_format: # optional, default is sarif
    - name: Pachyderm Pipeline Updater
  # You may pin to the exact commit or the version.
  # uses: pachyderm/pachyderm-actions@69c4694668a732392b203fab5b8dbdc14b8a097c
  uses: pachyderm/pachyderm-actions@0.0.1
  - name: Veracode Upload And Scan
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-uploadandscan-action@c5e63c8383debb26a0d48250eab75d94327635ba
  uses: veracode/veracode-uploadandscan-action@0.2.1
  with:
    # appname
    appname: # default is ${{ github.repository }}
    # createprofile
    createprofile: # default is true
    # filepath
    filepath: 
    # version
    version: # default is Scan from Github job: ${{ github.run_id }}
    # vid
    vid: 
    # vkey
    vkey: 
    # true or flase
    createsandbox: # optional
    # name of the sandbox
    sandboxname: # optional
    # wait X minutes for the scan to complete
    scantimeout: # optional
    # modules to exclude from module selection
    exclude: # optional
    # modules to include in module selection
    include: # optional
    # business criticality - policy selection
    criticality: # optional
    # filename pattern
    pattern: # optional
    # replacement
    replacement: # optional
    # replacement
    sandboxid: # optional
    # All top level modules
    scanallnonfataltoplevelmodules: # optional
    # platform selected modules
    selected: # optional
    # selected modules like from previous scan
    selectedpreviously: # optional
    # teams
    teams: # optional
    # teams
    toplevel: # optional
    - name: Set up gcloud Cloud SDK environment
  # You may pin to the exact commit or the version.
  # uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  uses: google-github-actions/setup-gcloud@v0.2.0
  with:
    # Version of the gcloud SDK to install. If unspecified or set to "latest",
the latest available gcloud SDK version for the target platform will be
installed. Example: "290.0.1".
    version: # optional, default is latest
    # Service account email address to use for authentication. This is required
for legacy .p12 keys but can be omitted for .json keys. This is usually of
the format <name>@<project-id>.iam.gserviceaccount.com.
    service_account_email: # optional
    # Service account key to use for authentication. This should be the JSON
formatted private key which can be exported from the Cloud Console. The
value can be raw or base64-encoded.
    service_account_key: # optional
    # ID of the Google Cloud project. If provided, this will configure gcloud to
use this project ID by default for commands. Individual commands can still
override the project using the --project flag which takes precedence.
    project_id: # optional
    # Export the provided credentials as Google Default Application Credentials.
This will make the credentials available to later steps via the
GOOGLE_APPLICATION_CREDENTIALS environment variable. Future steps that
consume Default Application Credentials will automatically detect and use
these credentials.
    export_default_credentials: # optional
    - name: Teamwork GitHub Sync
  # You may pin to the exact commit or the version.
  # uses: Teamwork/github-sync@f4d4ec15b53225ceec705ab9825003b3d7d56a76
  uses: Teamwork/github-sync@v1.2.0
  with:
    # GitHub token
    GITHUB_TOKEN: 
    # Teamwork URI
    TEAMWORK_URI: 
    # Teamwork API token
    TEAMWORK_API_TOKEN: 
    # Do you want to enable automatic tagging: true/false
    AUTOMATIC_TAGGING: # optional
    - name: Git Version
  # You may pin to the exact commit or the version.
  # uses: codacy/git-version@fa06788276d7492a2af01662649696d249ecf4cb
  uses: codacy/git-version@2.4.0
  with:
    # The name of the release branch
    release-branch: # default is master
    # The name of the dev branch
    dev-branch: # default is dev
    # The prefix to use in the version
    prefix: # optional
    # The paths to be used to calculate changes (comma-separated)
    log-paths: # optional, default is ./
